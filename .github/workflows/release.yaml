name: "Release"

on:
  push:
    branches:
      - master
      - release/*

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: v0.78.0
          # workaround to ensure force pushes to changeset branch use REPO_TOKEN owner's account
          # see https://github.com/changesets/action/issues/70
          persist-credentials: false

      - name: CI Setup
        uses: ./.github/actions/ci-setup

      # if there are changesets present, package.json will be bumped
      - name: Bump and Collect Versions
        run: |
          echo "BUILD_VERSION=$(sed -nE 's/^\s*"version": "(.*?)",$/\1/p' packages/fuels/package.json)" >> $GITHUB_ENV
          echo "FUEL_CORE_VERSION=$(cat ./packages/fuel-core/VERSION)" >> $GITHUB_ENV
          echo "FORC_VERSION=$(cat ./packages/forc/VERSION)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure NPM access
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: pnpm build

      - name: Decides if Docs should be deployed
        run: |
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo $CURRENT_TAG
          if [[ $CURRENT_TAG == "v0.78.0" ]]; then
            echo "SHOULD_DEPLOY_DOCS=true" >> $GITHUB_ENV
          fi

      - name: Configure GitHub Pages
        if: env.SHOULD_DEPLOY_DOCS == 'true'
        uses: actions/configure-pages@v2

      - name: Upload Docs Artifact
        if: env.SHOULD_DEPLOY_DOCS == 'true'
        uses: actions/upload-pages-artifact@v1
        with:
          path: apps/docs/dist

      - name: Deploy Docs
        if: env.SHOULD_DEPLOY_DOCS == 'true'
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Checkout API Docs
        if: env.SHOULD_DEPLOY_DOCS == 'true'
        uses: actions/checkout@v3
        with:
          ref: docs
          fetch-depth: 0

      - name: Generate and Push API Docs
        if: env.SHOULD_DEPLOY_DOCS == 'true'
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git merge v0.78.0 --no-edit
          pnpm install
          pnpm build
          rm -f apps/docs/.gitignore
          git add apps/docs/src/api/
          git add apps/docs/.typedoc/api-links.json
          git commit -m "docs: API docs - v${{ env.BUILD_VERSION }}"
          git push
          git restore apps/docs/.gitignore
